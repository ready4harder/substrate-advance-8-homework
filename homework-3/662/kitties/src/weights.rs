
//! Autogenerated weights for `pallet_kitties`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-09-25, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `HP`, CPU: `12th Gen Intel(R) Core(TM) i7-1255U`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// ./target/production/solochain-template-node
// benchmark
// pallet
// --wasm-execution=compiled
// --pallet
// pallet_kitties
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/kitties/src/weights.rs
// --template
// .maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_kitties`.
pub trait WeightInfo {
	fn create() -> Weight;
	fn breed() -> Weight;
	fn transfer() -> Weight;
	fn sale() -> Weight;
	fn bid() -> Weight;
}

/// Weights for `pallet_kitties` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::Kitties` (r:0 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:0 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `147`
		//  Estimated: `1632`
		// Minimum execution time: 9_980_000 picoseconds.
		Weight::from_parts(10_853_000, 1632)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Kitties::Kitties` (r:2 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:0 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn breed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `304`
		//  Estimated: `6244`
		// Minimum execution time: 15_337_000 picoseconds.
		Weight::from_parts(15_947_000, 6244)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:1 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `3770`
		// Minimum execution time: 11_973_000 picoseconds.
		Weight::from_parts(12_329_000, 3770)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Kitties::KittyOwner` (r:1 w:0)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesOnSale` (r:1 w:1)
	/// Proof: `Kitties::KittiesOnSale` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `244`
		//  Estimated: `3709`
		// Minimum execution time: 9_580_000 picoseconds.
		Weight::from_parts(10_116_000, 3709)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesOnSale` (r:1 w:0)
	/// Proof: `Kitties::KittiesOnSale` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesBid` (r:1 w:1)
	/// Proof: `Kitties::KittiesBid` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `320`
		//  Estimated: `3785`
		// Minimum execution time: 23_351_000 picoseconds.
		Weight::from_parts(25_453_000, 3785)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::Kitties` (r:0 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:0 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `147`
		//  Estimated: `1632`
		// Minimum execution time: 9_980_000 picoseconds.
		Weight::from_parts(10_853_000, 1632)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Kitties::Kitties` (r:2 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:0 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn breed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `304`
		//  Estimated: `6244`
		// Minimum execution time: 15_337_000 picoseconds.
		Weight::from_parts(15_947_000, 6244)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittyOwner` (r:1 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `3770`
		// Minimum execution time: 11_973_000 picoseconds.
		Weight::from_parts(12_329_000, 3770)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Kitties::KittyOwner` (r:1 w:0)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesOnSale` (r:1 w:1)
	/// Proof: `Kitties::KittiesOnSale` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `244`
		//  Estimated: `3709`
		// Minimum execution time: 9_580_000 picoseconds.
		Weight::from_parts(10_116_000, 3709)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesOnSale` (r:1 w:0)
	/// Proof: `Kitties::KittiesOnSale` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Kitties::KittiesBid` (r:1 w:1)
	/// Proof: `Kitties::KittiesBid` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `320`
		//  Estimated: `3785`
		// Minimum execution time: 23_351_000 picoseconds.
		Weight::from_parts(25_453_000, 3785)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}